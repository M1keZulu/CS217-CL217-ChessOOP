<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_piece" kind="class" language="C++" prot="public">
    <compoundname>Piece</compoundname>
    <derivedcompoundref refid="class_bishop" prot="public" virt="non-virtual">Bishop</derivedcompoundref>
    <derivedcompoundref refid="class_king" prot="public" virt="non-virtual">King</derivedcompoundref>
    <derivedcompoundref refid="class_knight" prot="public" virt="non-virtual">Knight</derivedcompoundref>
    <derivedcompoundref refid="class_pawn" prot="public" virt="non-virtual">Pawn</derivedcompoundref>
    <derivedcompoundref refid="class_queen" prot="public" virt="non-virtual">Queen</derivedcompoundref>
    <derivedcompoundref refid="class_rook" prot="public" virt="non-virtual">Rook</derivedcompoundref>
    <includes refid="piece_8h" local="no">piece.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_piece_1ab866e2b78f08c3764feed43e43da25d0" prot="protected" static="no" mutable="no">
        <type>const <ref refid="enums__data_8h_1a12ed9719bbdf7bc596ff7a6f4bf3f021" kindref="member">PieceType</ref></type>
        <definition>const PieceType Piece::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="6" column="17" bodyfile="piece.h" bodystart="6" bodyend="-1"/>
        <referencedby refid="class_piece_1a38eb417c4df0cf957e4c60e990ac2177" compoundref="piece_8cpp" startline="20" endline="20">getName</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_piece_1ac3951a11d91640b4a4c507e67bacee73" prot="protected" static="no" mutable="no">
        <type>const <ref refid="enums__data_8h_1ab87bacfdad76e61b9412d7124be44c1c" kindref="member">Color</ref></type>
        <definition>const Color Piece::color</definition>
        <argsstring></argsstring>
        <name>color</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="8" column="13" bodyfile="piece.h" bodystart="8" bodyend="-1"/>
        <referencedby refid="class_bishop_1a46906106996a8c68fb5c54130eb70d19" compoundref="bishop_8cpp" startline="12" endline="78">Bishop::generateMoves</referencedby>
        <referencedby refid="class_king_1a1fb75c94e504d4fccb9595444331135d" compoundref="king_8cpp" startline="13" endline="79">King::generateMoves</referencedby>
        <referencedby refid="class_knight_1a8dc6fb637609a836174bd75c3da15769" compoundref="knight_8cpp" startline="12" endline="54">Knight::generateMoves</referencedby>
        <referencedby refid="class_pawn_1adda5fafc9fdca25766551811dce8ab99" compoundref="pawn_8cpp" startline="24" endline="70">Pawn::generateMoves</referencedby>
        <referencedby refid="class_queen_1a276779894849d33832e841ee21286b99" compoundref="queen_8cpp" startline="12" endline="138">Queen::generateMoves</referencedby>
        <referencedby refid="class_rook_1a8bc7f85bd1cb169d1944871e3327d5e9" compoundref="rook_8cpp" startline="12" endline="74">Rook::generateMoves</referencedby>
        <referencedby refid="class_piece_1ad65707ed2f50e6d5fef41000395bc050" compoundref="piece_8cpp" startline="19" endline="19">getColor</referencedby>
        <referencedby refid="class_piece_1a1d592d6952b109b806428ae0b291e98e" compoundref="piece_8cpp" startline="29" endline="277">isUnderAttack</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_piece_1a256212f96ea2ff8d6324d239b23b730d" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int Piece::moveCount</definition>
        <argsstring></argsstring>
        <name>moveCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="10" column="5" bodyfile="piece.h" bodystart="10" bodyend="-1"/>
        <referencedby refid="class_pawn_1adda5fafc9fdca25766551811dce8ab99" compoundref="pawn_8cpp" startline="24" endline="70">Pawn::generateMoves</referencedby>
        <referencedby refid="class_piece_1a5c4e8e2c03b49909ffd8f7ac16afebd6" compoundref="piece_8cpp" startline="23" endline="23">getCount</referencedby>
        <referencedby refid="class_piece_1a0879195c4d81bdac95aa4d57320eee10" compoundref="piece_8cpp" startline="14" endline="14">Piece</referencedby>
        <referencedby refid="class_piece_1ace8d7a830a4d419b5e3d997c1e2a12e9" compoundref="piece_8cpp" startline="22" endline="22">PieceMoved</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_piece_1a24fb75c3281e4c3c0e7b73c2e4f719b2" prot="protected" static="no" mutable="no">
        <type>vector&lt; <ref refid="struct_point" kindref="compound">Point</ref> &gt;</type>
        <definition>vector&lt;Point&gt; Piece::movesAvailable</definition>
        <argsstring></argsstring>
        <name>movesAvailable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="11" column="8" bodyfile="piece.h" bodystart="11" bodyend="-1"/>
        <referencedby refid="class_piece_1a2cbe16344ed80ccead6c8679be678078" compoundref="piece_8cpp" startline="26" endline="28">addMove</referencedby>
        <referencedby refid="class_bishop_1a46906106996a8c68fb5c54130eb70d19" compoundref="bishop_8cpp" startline="12" endline="78">Bishop::generateMoves</referencedby>
        <referencedby refid="class_king_1a1fb75c94e504d4fccb9595444331135d" compoundref="king_8cpp" startline="13" endline="79">King::generateMoves</referencedby>
        <referencedby refid="class_knight_1a8dc6fb637609a836174bd75c3da15769" compoundref="knight_8cpp" startline="12" endline="54">Knight::generateMoves</referencedby>
        <referencedby refid="class_pawn_1adda5fafc9fdca25766551811dce8ab99" compoundref="pawn_8cpp" startline="24" endline="70">Pawn::generateMoves</referencedby>
        <referencedby refid="class_queen_1a276779894849d33832e841ee21286b99" compoundref="queen_8cpp" startline="12" endline="138">Queen::generateMoves</referencedby>
        <referencedby refid="class_rook_1a8bc7f85bd1cb169d1944871e3327d5e9" compoundref="rook_8cpp" startline="12" endline="74">Rook::generateMoves</referencedby>
        <referencedby refid="class_piece_1aedad096a332cb6fe4abd799c503927f3" compoundref="piece_8cpp" startline="294" endline="298">getAvailableMoves</referencedby>
        <referencedby refid="class_piece_1a14b78dc6c3fad1a96d57040b6107d0e8" compoundref="piece_8cpp" startline="278" endline="285">isMoveLegal</referencedby>
        <referencedby refid="class_piece_1ae49872b2812e4825f2d4a45c8a996539" compoundref="piece_8cpp" startline="25" endline="25">numberMoves</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_piece_1afedb258feac080da7def714398b92ce0" prot="protected" static="no" mutable="no">
        <type>vector&lt; <ref refid="class_piece" kindref="compound">Piece</ref> * &gt;</type>
        <definition>vector&lt;Piece*&gt; Piece::pawnLocation</definition>
        <argsstring></argsstring>
        <name>pawnLocation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="12" column="8" bodyfile="piece.h" bodystart="12" bodyend="-1"/>
        <referencedby refid="class_pawn_1aad90613fd3f8cf57c589fb039a0bd78a" compoundref="pawn_8cpp" startline="20" endline="22">Pawn::AddenPassant</referencedby>
        <referencedby refid="class_pawn_1a24d16bc3de3b869a2598624ba9686ef0" compoundref="pawn_8cpp" startline="12" endline="19">Pawn::enPassant</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_piece_1abf0dcc424990fe8e17e72b846988e262" prot="protected" static="yes" mutable="no">
        <type><ref refid="class_cell" kindref="compound">Cell</ref> *</type>
        <definition>Cell * Piece::cell</definition>
        <argsstring></argsstring>
        <name>cell</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="7" column="12" bodyfile="piece.h" bodystart="7" bodyend="-1"/>
        <referencedby refid="class_bishop_1a46906106996a8c68fb5c54130eb70d19" compoundref="bishop_8cpp" startline="12" endline="78">Bishop::generateMoves</referencedby>
        <referencedby refid="class_king_1a1fb75c94e504d4fccb9595444331135d" compoundref="king_8cpp" startline="13" endline="79">King::generateMoves</referencedby>
        <referencedby refid="class_knight_1a8dc6fb637609a836174bd75c3da15769" compoundref="knight_8cpp" startline="12" endline="54">Knight::generateMoves</referencedby>
        <referencedby refid="class_pawn_1adda5fafc9fdca25766551811dce8ab99" compoundref="pawn_8cpp" startline="24" endline="70">Pawn::generateMoves</referencedby>
        <referencedby refid="class_queen_1a276779894849d33832e841ee21286b99" compoundref="queen_8cpp" startline="12" endline="138">Queen::generateMoves</referencedby>
        <referencedby refid="class_rook_1a8bc7f85bd1cb169d1944871e3327d5e9" compoundref="rook_8cpp" startline="12" endline="74">Rook::generateMoves</referencedby>
        <referencedby refid="class_piece_1a1d592d6952b109b806428ae0b291e98e" compoundref="piece_8cpp" startline="29" endline="277">isUnderAttack</referencedby>
        <referencedby refid="class_piece_1a851fad877ea6dd61d15cba614baa78c1" compoundref="piece_8cpp" startline="16" endline="16">setCellArray</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_piece_1a42d582696c1698b0c8b565c3e0d325d3" prot="protected" static="yes" mutable="no">
        <type>vector&lt; <ref refid="class_piece" kindref="compound">Piece</ref> * &gt;</type>
        <definition>vector&lt; Piece * &gt; Piece::pieces</definition>
        <argsstring></argsstring>
        <name>pieces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="9" column="15" bodyfile="piece.h" bodystart="9" bodyend="-1"/>
        <referencedby refid="class_piece_1af9d46f546814e53bef385fa951b2579a" compoundref="piece_8cpp" startline="15" endline="15">getPieces</referencedby>
        <referencedby refid="class_piece_1a0879195c4d81bdac95aa4d57320eee10" compoundref="piece_8cpp" startline="14" endline="14">Piece</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_piece_1a0879195c4d81bdac95aa4d57320eee10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Piece::Piece</definition>
        <argsstring>(Color m_color, PieceType name)</argsstring>
        <name>Piece</name>
        <param>
          <type><ref refid="enums__data_8h_1ab87bacfdad76e61b9412d7124be44c1c" kindref="member">Color</ref></type>
          <declname>m_color</declname>
        </param>
        <param>
          <type><ref refid="enums__data_8h_1a12ed9719bbdf7bc596ff7a6f4bf3f021" kindref="member">PieceType</ref></type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="14" column="1" bodyfile="piece.cpp" bodystart="14" bodyend="14"/>
        <references refid="class_piece_1a256212f96ea2ff8d6324d239b23b730d" compoundref="piece_8h" startline="10">moveCount</references>
        <references refid="class_piece_1a42d582696c1698b0c8b565c3e0d325d3" compoundref="piece_8h" startline="9">pieces</references>
      </memberdef>
      <memberdef kind="function" id="class_piece_1ad65707ed2f50e6d5fef41000395bc050" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="enums__data_8h_1ab87bacfdad76e61b9412d7124be44c1c" kindref="member">Color</ref></type>
        <definition>Color Piece::getColor</definition>
        <argsstring>()</argsstring>
        <name>getColor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="18" column="15" bodyfile="piece.cpp" bodystart="19" bodyend="19"/>
        <references refid="class_piece_1ac3951a11d91640b4a4c507e67bacee73" compoundref="piece_8h" startline="8">color</references>
      </memberdef>
      <memberdef kind="function" id="class_piece_1a38eb417c4df0cf957e4c60e990ac2177" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="enums__data_8h_1a12ed9719bbdf7bc596ff7a6f4bf3f021" kindref="member">PieceType</ref></type>
        <definition>PieceType Piece::getName</definition>
        <argsstring>()</argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="19" column="19" bodyfile="piece.cpp" bodystart="20" bodyend="20"/>
        <references refid="class_piece_1ab866e2b78f08c3764feed43e43da25d0" compoundref="piece_8h" startline="6">name</references>
      </memberdef>
      <memberdef kind="function" id="class_piece_1ace8d7a830a4d419b5e3d997c1e2a12e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Piece::PieceMoved</definition>
        <argsstring>()</argsstring>
        <name>PieceMoved</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="20" column="14" bodyfile="piece.cpp" bodystart="22" bodyend="22"/>
        <references refid="class_piece_1a256212f96ea2ff8d6324d239b23b730d" compoundref="piece_8h" startline="10">moveCount</references>
        <referencedby refid="class_board_1ad9ce3a07c2b9095da897ce094085c8ea" compoundref="board_8cpp" startline="231" endline="406">Board::movePiece</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_piece_1aedad096a332cb6fe4abd799c503927f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>vector&lt; <ref refid="struct_point" kindref="compound">Point</ref> &gt;</type>
        <definition>vector&lt; Point &gt; Piece::getAvailableMoves</definition>
        <argsstring>()</argsstring>
        <name>getAvailableMoves</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="21" column="16" bodyfile="piece.cpp" bodystart="294" bodyend="298"/>
        <references refid="class_piece_1a24fb75c3281e4c3c0e7b73c2e4f719b2" compoundref="piece_8h" startline="11">movesAvailable</references>
      </memberdef>
      <memberdef kind="function" id="class_piece_1a0b4a7d639608664bc968062679def36c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Piece::inLimits</definition>
        <argsstring>(Point checkPos)</argsstring>
        <name>inLimits</name>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref></type>
          <declname>checkPos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="22" column="5" bodyfile="piece.cpp" bodystart="286" bodyend="293"/>
        <references refid="struct_point_1a8c779e11e694b20e0946105a9f5de842" compoundref="enums__data_8h" startline="27">Point::x</references>
        <references refid="struct_point_1a2e1b5fb2b2a83571f5c0bc0f66a73cf7" compoundref="enums__data_8h" startline="28">Point::y</references>
        <referencedby refid="class_bishop_1a46906106996a8c68fb5c54130eb70d19" compoundref="bishop_8cpp" startline="12" endline="78">Bishop::generateMoves</referencedby>
        <referencedby refid="class_king_1a1fb75c94e504d4fccb9595444331135d" compoundref="king_8cpp" startline="13" endline="79">King::generateMoves</referencedby>
        <referencedby refid="class_knight_1a8dc6fb637609a836174bd75c3da15769" compoundref="knight_8cpp" startline="12" endline="54">Knight::generateMoves</referencedby>
        <referencedby refid="class_pawn_1adda5fafc9fdca25766551811dce8ab99" compoundref="pawn_8cpp" startline="24" endline="70">Pawn::generateMoves</referencedby>
        <referencedby refid="class_queen_1a276779894849d33832e841ee21286b99" compoundref="queen_8cpp" startline="12" endline="138">Queen::generateMoves</referencedby>
        <referencedby refid="class_rook_1a8bc7f85bd1cb169d1944871e3327d5e9" compoundref="rook_8cpp" startline="12" endline="74">Rook::generateMoves</referencedby>
        <referencedby refid="class_piece_1a1d592d6952b109b806428ae0b291e98e" compoundref="piece_8cpp" startline="29" endline="277">isUnderAttack</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_piece_1ae20a169ce6b98bd1e41125f1828ec541" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Piece::generateMoves</definition>
        <argsstring>(Point currentPos)</argsstring>
        <name>generateMoves</name>
        <reimplementedby refid="class_bishop_1a46906106996a8c68fb5c54130eb70d19">generateMoves</reimplementedby>
        <reimplementedby refid="class_king_1a1fb75c94e504d4fccb9595444331135d">generateMoves</reimplementedby>
        <reimplementedby refid="class_knight_1a8dc6fb637609a836174bd75c3da15769">generateMoves</reimplementedby>
        <reimplementedby refid="class_pawn_1adda5fafc9fdca25766551811dce8ab99">generateMoves</reimplementedby>
        <reimplementedby refid="class_queen_1a276779894849d33832e841ee21286b99">generateMoves</reimplementedby>
        <reimplementedby refid="class_rook_1a8bc7f85bd1cb169d1944871e3327d5e9">generateMoves</reimplementedby>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref></type>
          <declname>currentPos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="23" column="14" bodyfile="piece.cpp" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_piece_1a14b78dc6c3fad1a96d57040b6107d0e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Piece::isMoveLegal</definition>
        <argsstring>(Point newPos)</argsstring>
        <name>isMoveLegal</name>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref></type>
          <declname>newPos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="24" column="13" bodyfile="piece.cpp" bodystart="278" bodyend="285"/>
        <references refid="class_piece_1a24fb75c3281e4c3c0e7b73c2e4f719b2" compoundref="piece_8h" startline="11">movesAvailable</references>
        <references refid="struct_point_1a8c779e11e694b20e0946105a9f5de842" compoundref="enums__data_8h" startline="27">Point::x</references>
        <references refid="struct_point_1a2e1b5fb2b2a83571f5c0bc0f66a73cf7" compoundref="enums__data_8h" startline="28">Point::y</references>
      </memberdef>
      <memberdef kind="function" id="class_piece_1a1d592d6952b109b806428ae0b291e98e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Piece::isUnderAttack</definition>
        <argsstring>(Point currentPos)</argsstring>
        <name>isUnderAttack</name>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref></type>
          <declname>currentPos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="25" column="14" bodyfile="piece.cpp" bodystart="29" bodyend="277"/>
        <references refid="enums__data_8h_1a12ed9719bbdf7bc596ff7a6f4bf3f021a1777a6c6eca5d45d0b2497cb81655841" compoundref="enums__data_8h" startline="7">bishop</references>
        <references refid="enums__data_8h_1ab87bacfdad76e61b9412d7124be44c1ca775364fe1f3fffe99686bf6d572a7370" compoundref="enums__data_8h" startline="11">black</references>
        <references refid="class_piece_1abf0dcc424990fe8e17e72b846988e262" compoundref="piece_8h" startline="7">cell</references>
        <references refid="class_piece_1ac3951a11d91640b4a4c507e67bacee73" compoundref="piece_8h" startline="8">color</references>
        <references refid="piece_8cpp_1ac389dbca21e58410d552988f3ec954c3" compoundref="piece_8cpp" startline="5">GRID</references>
        <references refid="class_piece_1a0b4a7d639608664bc968062679def36c" compoundref="piece_8cpp" startline="286" endline="293">inLimits</references>
        <references refid="enums__data_8h_1a12ed9719bbdf7bc596ff7a6f4bf3f021a62d98a2bce526c2c65df90a8632636c3" compoundref="enums__data_8h" startline="7">knight</references>
        <references refid="enums__data_8h_1a12ed9719bbdf7bc596ff7a6f4bf3f021a366d07fc8b05bf575d5306795ace13a4" compoundref="enums__data_8h" startline="7">pawn</references>
        <references refid="enums__data_8h_1a12ed9719bbdf7bc596ff7a6f4bf3f021a0a6497b92a62262a6001b788cf2a8a51" compoundref="enums__data_8h" startline="7">queen</references>
        <references refid="enums__data_8h_1a12ed9719bbdf7bc596ff7a6f4bf3f021a86a1080ba85c6e5fb246d32259f5f16f" compoundref="enums__data_8h" startline="7">rook</references>
        <references refid="enums__data_8h_1ab87bacfdad76e61b9412d7124be44c1cade7bfe6c82a2aaaee276f752cdadf3a9" compoundref="enums__data_8h" startline="11">white</references>
        <references refid="struct_point_1a8c779e11e694b20e0946105a9f5de842" compoundref="enums__data_8h" startline="27">Point::x</references>
        <references refid="struct_point_1a2e1b5fb2b2a83571f5c0bc0f66a73cf7" compoundref="enums__data_8h" startline="28">Point::y</references>
      </memberdef>
      <memberdef kind="function" id="class_piece_1a2cbe16344ed80ccead6c8679be678078" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Piece::addMove</definition>
        <argsstring>(Point pos)</argsstring>
        <name>addMove</name>
        <param>
          <type><ref refid="struct_point" kindref="compound">Point</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="26" column="14" bodyfile="piece.cpp" bodystart="26" bodyend="28"/>
        <references refid="class_piece_1a24fb75c3281e4c3c0e7b73c2e4f719b2" compoundref="piece_8h" startline="11">movesAvailable</references>
        <references refid="struct_point_1a8c779e11e694b20e0946105a9f5de842" compoundref="enums__data_8h" startline="27">Point::x</references>
        <references refid="struct_point_1a2e1b5fb2b2a83571f5c0bc0f66a73cf7" compoundref="enums__data_8h" startline="28">Point::y</references>
      </memberdef>
      <memberdef kind="function" id="class_piece_1ae49872b2812e4825f2d4a45c8a996539" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Piece::numberMoves</definition>
        <argsstring>()</argsstring>
        <name>numberMoves</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="27" column="13" bodyfile="piece.cpp" bodystart="25" bodyend="25"/>
        <references refid="class_piece_1a24fb75c3281e4c3c0e7b73c2e4f719b2" compoundref="piece_8h" startline="11">movesAvailable</references>
      </memberdef>
      <memberdef kind="function" id="class_piece_1a5c4e8e2c03b49909ffd8f7ac16afebd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int Piece::getCount</definition>
        <argsstring>()</argsstring>
        <name>getCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="28" column="13" bodyfile="piece.cpp" bodystart="23" bodyend="23"/>
        <references refid="class_piece_1a256212f96ea2ff8d6324d239b23b730d" compoundref="piece_8h" startline="10">moveCount</references>
      </memberdef>
      <memberdef kind="function" id="class_piece_1acf3ede4e8b3f1cd5fdefb42b322dd79d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="enums__data_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref></type>
        <definition>Direction Piece::getPawnDirection</definition>
        <argsstring>()</argsstring>
        <name>getPawnDirection</name>
        <reimplementedby refid="class_pawn_1a15b52722227cfaa8fcceb0ddf2344964">getPawnDirection</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="29" column="19" bodyfile="piece.cpp" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="class_piece_1a0647321e482f692d3018db155158aea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Piece::enPassant</definition>
        <argsstring>(Piece *ptr)</argsstring>
        <name>enPassant</name>
        <reimplementedby refid="class_pawn_1a24d16bc3de3b869a2598624ba9686ef0">enPassant</reimplementedby>
        <param>
          <type><ref refid="class_piece" kindref="compound">Piece</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="30" column="14" bodyfile="piece.cpp" bodystart="17" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="class_piece_1a88217066acc17caf4f200245abf54e05" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Piece::AddenPassant</definition>
        <argsstring>(Piece *ptr)</argsstring>
        <name>AddenPassant</name>
        <reimplementedby refid="class_pawn_1aad90613fd3f8cf57c589fb039a0bd78a">AddenPassant</reimplementedby>
        <param>
          <type><ref refid="class_piece" kindref="compound">Piece</ref> *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="31" column="14" bodyfile="piece.cpp" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="class_piece_1a9bbdeaa655a2de61b6e7101ff89bf795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="struct_point" kindref="compound">Point</ref> &gt;</type>
        <definition>vector&lt; Point &gt; Piece::getPossibleMoves</definition>
        <argsstring>()</argsstring>
        <name>getPossibleMoves</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="32" column="8" bodyfile="piece.cpp" bodystart="10" bodyend="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_piece_1a851fad877ea6dd61d15cba614baa78c1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Piece::setCellArray</definition>
        <argsstring>(Cell *m_cell)</argsstring>
        <name>setCellArray</name>
        <param>
          <type><ref refid="class_cell" kindref="compound">Cell</ref> *</type>
          <declname>m_cell</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="15" column="13" bodyfile="piece.cpp" bodystart="16" bodyend="16"/>
        <references refid="class_piece_1abf0dcc424990fe8e17e72b846988e262" compoundref="piece_8h" startline="7">cell</references>
        <referencedby refid="class_board_1afd0e96a4b1485d2ce70581d7102df864" compoundref="board_8cpp" startline="50" endline="196">Board::Board</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_piece_1af9d46f546814e53bef385fa951b2579a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="class_piece" kindref="compound">Piece</ref> * &gt;</type>
        <definition>vector&lt; Piece * &gt; Piece::getPieces</definition>
        <argsstring>()</argsstring>
        <name>getPieces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="16" column="15" bodyfile="piece.cpp" bodystart="15" bodyend="15"/>
        <references refid="class_piece_1a42d582696c1698b0c8b565c3e0d325d3" compoundref="piece_8h" startline="9">pieces</references>
        <referencedby refid="class_board_1af73f45730119a1fd8f6670f53f959e68" compoundref="board_8cpp" startline="18" endline="27">Board::~Board</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_piece_1ae7d23e73e4591a7b671cc70e2c43cc67" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Piece::clearPieces</definition>
        <argsstring>()</argsstring>
        <name>clearPieces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="piece.h" line="17" column="13" bodyfile="piece.cpp" bodystart="12" bodyend="12"/>
        <referencedby refid="class_board_1af73f45730119a1fd8f6670f53f959e68" compoundref="board_8cpp" startline="18" endline="27">Board::~Board</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>Queen</label>
        <link refid="class_queen"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Pawn</label>
        <link refid="class_pawn"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Knight</label>
        <link refid="class_knight"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Piece</label>
        <link refid="class_piece"/>
      </node>
      <node id="2">
        <label>Bishop</label>
        <link refid="class_bishop"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Rook</label>
        <link refid="class_rook"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>King</label>
        <link refid="class_king"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Cell</label>
        <link refid="class_cell"/>
        <childnode refid="1" relation="usage">
          <edgelabel>piece</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Piece</label>
        <link refid="class_piece"/>
        <childnode refid="2" relation="usage">
          <edgelabel>cell</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="piece.h" line="4" column="1" bodyfile="piece.h" bodystart="4" bodyend="33"/>
    <listofallmembers>
      <member refid="class_piece_1a88217066acc17caf4f200245abf54e05" prot="public" virt="virtual"><scope>Piece</scope><name>AddenPassant</name></member>
      <member refid="class_piece_1a2cbe16344ed80ccead6c8679be678078" prot="public" virt="virtual"><scope>Piece</scope><name>addMove</name></member>
      <member refid="class_piece_1abf0dcc424990fe8e17e72b846988e262" prot="protected" virt="non-virtual"><scope>Piece</scope><name>cell</name></member>
      <member refid="class_piece_1ae7d23e73e4591a7b671cc70e2c43cc67" prot="public" virt="non-virtual"><scope>Piece</scope><name>clearPieces</name></member>
      <member refid="class_piece_1ac3951a11d91640b4a4c507e67bacee73" prot="protected" virt="non-virtual"><scope>Piece</scope><name>color</name></member>
      <member refid="class_piece_1a0647321e482f692d3018db155158aea0" prot="public" virt="virtual"><scope>Piece</scope><name>enPassant</name></member>
      <member refid="class_piece_1ae20a169ce6b98bd1e41125f1828ec541" prot="public" virt="virtual"><scope>Piece</scope><name>generateMoves</name></member>
      <member refid="class_piece_1aedad096a332cb6fe4abd799c503927f3" prot="public" virt="virtual"><scope>Piece</scope><name>getAvailableMoves</name></member>
      <member refid="class_piece_1ad65707ed2f50e6d5fef41000395bc050" prot="public" virt="virtual"><scope>Piece</scope><name>getColor</name></member>
      <member refid="class_piece_1a5c4e8e2c03b49909ffd8f7ac16afebd6" prot="public" virt="virtual"><scope>Piece</scope><name>getCount</name></member>
      <member refid="class_piece_1a38eb417c4df0cf957e4c60e990ac2177" prot="public" virt="virtual"><scope>Piece</scope><name>getName</name></member>
      <member refid="class_piece_1acf3ede4e8b3f1cd5fdefb42b322dd79d" prot="public" virt="virtual"><scope>Piece</scope><name>getPawnDirection</name></member>
      <member refid="class_piece_1af9d46f546814e53bef385fa951b2579a" prot="public" virt="non-virtual"><scope>Piece</scope><name>getPieces</name></member>
      <member refid="class_piece_1a9bbdeaa655a2de61b6e7101ff89bf795" prot="public" virt="non-virtual"><scope>Piece</scope><name>getPossibleMoves</name></member>
      <member refid="class_piece_1a0b4a7d639608664bc968062679def36c" prot="public" virt="non-virtual"><scope>Piece</scope><name>inLimits</name></member>
      <member refid="class_piece_1a14b78dc6c3fad1a96d57040b6107d0e8" prot="public" virt="virtual"><scope>Piece</scope><name>isMoveLegal</name></member>
      <member refid="class_piece_1a1d592d6952b109b806428ae0b291e98e" prot="public" virt="virtual"><scope>Piece</scope><name>isUnderAttack</name></member>
      <member refid="class_piece_1a256212f96ea2ff8d6324d239b23b730d" prot="protected" virt="non-virtual"><scope>Piece</scope><name>moveCount</name></member>
      <member refid="class_piece_1a24fb75c3281e4c3c0e7b73c2e4f719b2" prot="protected" virt="non-virtual"><scope>Piece</scope><name>movesAvailable</name></member>
      <member refid="class_piece_1ab866e2b78f08c3764feed43e43da25d0" prot="protected" virt="non-virtual"><scope>Piece</scope><name>name</name></member>
      <member refid="class_piece_1ae49872b2812e4825f2d4a45c8a996539" prot="public" virt="virtual"><scope>Piece</scope><name>numberMoves</name></member>
      <member refid="class_piece_1afedb258feac080da7def714398b92ce0" prot="protected" virt="non-virtual"><scope>Piece</scope><name>pawnLocation</name></member>
      <member refid="class_piece_1a0879195c4d81bdac95aa4d57320eee10" prot="public" virt="non-virtual"><scope>Piece</scope><name>Piece</name></member>
      <member refid="class_piece_1ace8d7a830a4d419b5e3d997c1e2a12e9" prot="public" virt="virtual"><scope>Piece</scope><name>PieceMoved</name></member>
      <member refid="class_piece_1a42d582696c1698b0c8b565c3e0d325d3" prot="protected" virt="non-virtual"><scope>Piece</scope><name>pieces</name></member>
      <member refid="class_piece_1a851fad877ea6dd61d15cba614baa78c1" prot="public" virt="non-virtual"><scope>Piece</scope><name>setCellArray</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
